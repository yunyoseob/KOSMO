/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.77
 * Generated at: 2022-05-19 05:51:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.kosmo.product.vo.KosmoProductVO;
import java.util.List;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

public final class kosmoProductMSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("a.b.c.com.kosmo.product.vo.KosmoProductVO");
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("<!-- \r\n");
      out.write("추가 요구사항\r\n");
      out.write("장바구니에 담을 때, alert으로 담을지 물어보기\r\n");
      out.write("몇 개 골랐는지 알려주기\r\n");
      out.write("한 번에 여러개 담게 하기\r\n");
      out.write("\r\n");
      out.write("select => update\r\n");
      out.write("\r\n");
      out.write("select = 0 => insert\r\n");
      out.write("select > 1 => update\r\n");
      out.write(" -->    \r\n");
 request.setCharacterEncoding("UTF-8");
      out.write("    \r\n");
      out.write("\r\n");

	Logger logger=LogManager.getLogger(this.getClass());
	logger.info("kosmoProductMSelect.jsp 페이지 입니당 >>> : ");
	Object obj = request.getAttribute("listS");
	List<KosmoProductVO> list = (List)obj;
	
	String mprice = "";
	KosmoProductVO _kvo = null;
	if (list.size() == 1) {
		
		_kvo = list.get(0);
		mprice = _kvo.getMprice();
	}

      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>kosmoProdctMSelect</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/kosmoSpring_YYS/js/common.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		alert(\"jQuery ready~~~~\");\r\n");
      out.write("		let mprice='");
      out.print( mprice );
      out.write("';\r\n");
      out.write("		console.log(\"before comma mprice >>> : \"+mprice);\r\n");
      out.write("		mprice=comma(mprice);\r\n");
      out.write("		console.log(\"after comma mprice >>> : \"+mprice);\r\n");
      out.write("		\r\n");
      out.write("		$(\"#mprice\").val(mprice);\r\n");
      out.write("		\r\n");
      out.write("		$(document).on(\"change\", \"#mcnt\", function(){\r\n");
      out.write("			let cntS=$(\"#mcnt\").val();\r\n");
      out.write("			console.log(\"cntS >>>> : \"+cntS);\r\n");
      out.write("			let mpricesum=comma_replace(mprice)*cntS;\r\n");
      out.write("			console.log(\"mpricesum >>> : \"+mpricesum);\r\n");
      out.write("			\r\n");
      out.write("			console.log(\"comma(mpricesum) >>> : \"+comma(mpricesum));\r\n");
      out.write("			$(\"#mpricesum\").val(comma(mpricesum));\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(document).on(\"click\",\"#cartBtn\", function(){\r\n");
      out.write("			\r\n");
      out.write("			let mcntV=$(\"#mcnt\").val();\r\n");
      out.write("			console.log(\"mcntV >>> : \"+mcntV);\r\n");
      out.write("			\r\n");
      out.write("			let pricesum=$(\"#mpricesum\").val();\r\n");
      out.write("			console.log(\"pricesum >>> : \"+pricesum);\r\n");
      out.write("			\r\n");
      out.write("			if(mcntV==0 && pricesum==0){\r\n");
      out.write("				alert(\"수량을 선택하세요~\");\r\n");
      out.write("				\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			$(\"#productSelectForm\").attr({\r\n");
      out.write("				\"action\":\"kosmoCartInsert.yys\",\r\n");
      out.write("				\"method\":\"GET\"\r\n");
      out.write("			}).submit();\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style type = \"text/css\">\r\n");
      out.write("			table {\r\n");
      out.write("				\r\n");
      out.write("				margin : 20px auto;\r\n");
      out.write("			\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			table, td, th {\r\n");
      out.write("			\r\n");
      out.write("				border-collapse : collapse;\r\n");
      out.write("				border : 1px solid black;\r\n");
      out.write("			\r\n");
      out.write("			};\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>Kosmo Product Merchandise Select jsp</h3>\r\n");
      out.write("<hr>\r\n");
      out.write("<div>\r\n");
      out.write("<form name = \"productSelectForm\" id = \"productSelectForm\" >\r\n");
      out.write("<table>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td rowspan = \"7\" align = \"center\" vertical-align = \"middle\" style = \"width:200px;\">\r\n");
      out.write("		<img src = \"/kosmoSpring_YYS/fileupload/board/");
      out.print( _kvo.getMimg() );
      out.write("\" width = \"130\" height = \"130\">\r\n");
      out.write("		</td>\r\n");
      out.write("		<td align = \"center\" colspan = \"2\">\r\n");
      out.write("		<input	type = \"text\" name = \"mname\" id = \"mname\" value = \"");
      out.print( _kvo.getMname() );
      out.write("\"\r\n");
      out.write("				style = \"width : 300px; text-align : center;\" readonly/>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>가격 : </td>\r\n");
      out.write("		<!-- <td align = \"right\" colspan = \"2\">  -->\r\n");
      out.write("		<td align = \"right\">\r\n");
      out.write("			<input	type = \"text\" name = \"mprice\" id = \"mprice\" value = \"");
      out.print( mprice );
      out.write("\"\r\n");
      out.write("					style = \"width: 280; text-align = right;\" readonly />\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>\r\n");
      out.write("			<label align = \"left\"> 수량 :</label>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td align = \"right\">\r\n");
      out.write("			<select name = \"mcnt\" id = \"mcnt\" style = \"width : 200px;\">\r\n");
      out.write("				<option value = \"0\">수량</option>\r\n");
      out.write("				<option value = \"1\">1</option>\r\n");
      out.write("				<option value = \"2\">2</option>\r\n");
      out.write("				<option value = \"3\">3</option>\r\n");
      out.write("				<option value = \"4\">4</option>\r\n");
      out.write("			</select>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>\r\n");
      out.write("		 <label align = \"left\">총 합계 : </label>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td align = \"right\">\r\n");
      out.write("		<input 	type=\"text\" name=\"mpricesum\" id=\"mpricesum\" value=\"0\" \r\n");
      out.write("				style=\"width:170px;text-align:right;\" readonly />&nbsp;원\r\n");
      out.write("		</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"center\" colspan=\"2\">\r\n");
      out.write("			<input type=\"hidden\" name=\"mimg\" id=\"mimg\" value=\"");
      out.print( _kvo.getMimg() );
      out.write("\" >\r\n");
      out.write("			이미지 이름 : ");
  out.println( _kvo.getMimg()); 
      out.write(" <br>\r\n");
      out.write("			<input type=\"hidden\" name=\"mid\" id=\"mid\" value=\"");
      out.print( _kvo.getMid() );
      out.write("\" >\r\n");
      out.write("			<input type=\"hidden\" name=\"mnum\" id=\"mnum\" value=\"");
      out.print( _kvo.getMnum() );
      out.write("\" >\r\n");
      out.write("			상품번호 : ");
  out.println( _kvo.getMnum()); 
      out.write(" <br>\r\n");
      out.write("			<input type=\"hidden\" name=\"mcnum\" id=\"mcnum\" value=\"C202205180001\" >\r\n");
      out.write("			<input type=\"button\" id=\"cartBtn\" value=\"장바구니\" style=\"width:150px;\">\r\n");
      out.write("			<input type=\"button\" id=\"stockBtn\" value=\"재고확인\" style=\"width:155px;\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
