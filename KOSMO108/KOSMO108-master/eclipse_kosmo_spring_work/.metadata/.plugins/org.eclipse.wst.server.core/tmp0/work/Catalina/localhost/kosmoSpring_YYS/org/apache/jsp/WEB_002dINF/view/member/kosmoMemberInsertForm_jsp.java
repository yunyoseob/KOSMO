/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.77
 * Generated at: 2022-05-20 08:54:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class kosmoMemberInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원 가입 폼</title>\r\n");
      out.write("<!--  디바이스에 최적화된 크기로 출력됨 -->\r\n");
      out.write("<meta name=\"viweport\" content=\"width=device-width, iitail-scale=1\" />\r\n");
      out.write("<!-- jQUery CDN 불러오기 -->\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<!-- 다음 주소록 OPEN API CDN 불러오기 -->\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		alert(\"jQuery ready~~~~\");\r\n");
      out.write("		\r\n");
      out.write("		// 아이디 중복체크\r\n");
      out.write("		$(\"#kmidCheckBtn\").click(function(){\r\n");
      out.write("			alert(\"midCheckBtn 함수 진입 >>> : \");\r\n");
      out.write("			\r\n");
      out.write("			let urlVal=\"/kosmoSpring_YYS/kosmoMemberIdcheck.yys\";\r\n");
      out.write("			let typeVal=\"POST\";\r\n");
      out.write("			let kmidVal=$(\"#kmid\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(kmidVal==''){\r\n");
      out.write("				alert(\"중복 체크할 아이디를 입력하세요 >>> : \");\r\n");
      out.write("				$(\"#kmid\").focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			console.log(\"urlVal >>> : \"+urlVal);\r\n");
      out.write("			console.log(\"typeVal >>> : \"+typeVal);\r\n");
      out.write("			console.log(\"kmidVal >>> : \"+kmidVal);\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:urlVal,\r\n");
      out.write("				type:typeVal,\r\n");
      out.write("				data:{\r\n");
      out.write("					\"kmid\":kmidVal\r\n");
      out.write("				},\r\n");
      out.write("				success:whenSuccess,\r\n");
      out.write("				error:whenError\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			function whenSuccess(resData){			\r\n");
      out.write("				if (resData == 'ID_YES'){\r\n");
      out.write("					alert(\"사용할 수 있는 아이디 입니다.\");\r\n");
      out.write("					$(\"#kmid\").focus();\r\n");
      out.write("				}else{\r\n");
      out.write("					alert(\"아이디가 이미 있습니다.\");\r\n");
      out.write("					$(\"#kmpw\").focus();\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			 \r\n");
      out.write("			function whenError(){\r\n");
      out.write("				alert(\"error\");\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 비밀번호 체크\r\n");
      out.write("		$(\"#kmpwCheck\").click(function(){\r\n");
      out.write("			alert(\"비밀번호 체크 버튼 클릭 >>> : \");\r\n");
      out.write("			var pw=$(\"#kmpw\").val();\r\n");
      out.write("			var pw_r=$(\"#kmpw_r\").val();\r\n");
      out.write("			alert(pw+\" : \"+pw_r);\r\n");
      out.write("			if(pw==pw_r){\r\n");
      out.write("				alert(\"비밀번호가 같습니다 >>> : \");\r\n");
      out.write("				// $(\"#kmpw_r\").val(' ');\r\n");
      out.write("				$(\"#kmname\").focus();\r\n");
      out.write("				return true;\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				alert(\"비밀번호가 다릅니다 >>> : \");\r\n");
      out.write("				$(\"#kmpw\").val(' ');\r\n");
      out.write("				$(\"#kmpw_r\").val(' ');\r\n");
      out.write("				$(\"#kmpw\").focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 이메일\r\n");
      out.write("		$(\"#kmemail2\").change(function(){\r\n");
      out.write("			$(\"#kmemail2 option:selected\").each(function(){\r\n");
      out.write("				// 직접입력일 경우\r\n");
      out.write("				if($(this).val()==1){\r\n");
      out.write("					var aa=$(\"#kmemail1\").val();\r\n");
      out.write("					$(\"#kmemail1\").val(' '); // 값 초기화\r\n");
      out.write("					$(\"#kmemail1\").attr(\"readonly\", false);\r\n");
      out.write("					}else{\r\n");
      out.write("						$(\"#kmemail1\").val($(this).text()); // 선택값 입력\r\n");
      out.write("						$(\"#kmemail1\").attr(\"readonly\", true); // 비활성화\r\n");
      out.write("					}\r\n");
      out.write("			});\r\n");
      out.write("		}); // change function\r\n");
      out.write("		\r\n");
      out.write("		// 우편번호\r\n");
      out.write("		$(\"#kmzone_btn\").click(function(){\r\n");
      out.write("			alert(\"우편번호 찾기 >>> : \");\r\n");
      out.write("			new daum.Postcode({\r\n");
      out.write("				oncomplete: function(data){\r\n");
      out.write("					$(\"#kmzone\").val(data.zonecode); // 5자리 새우편번호 사용\r\n");
      out.write("					$(\"#kmroad\").val(data.roadAddress); // 도로명 주소\r\n");
      out.write("					$(\"#kmjibun\").val(data.jibunAddress); // 지번주소\r\n");
      out.write("				}\r\n");
      out.write("			}).open();\r\n");
      out.write("		}); \r\n");
      out.write("		\r\n");
      out.write("		// form 태그에 바인딩 된 데이터 jsp로 보내기\r\n");
      out.write("		$(\"#insertBtn\").click(function(){\r\n");
      out.write("			alert(\"데이터를 넘기도록 하겠습니다 >>> : \");\r\n");
      out.write("			$(\"#kosmoMemberInsert\").attr({\r\n");
      out.write("				\"action\":\"kosmoMemberInsert.yys\",\r\n");
      out.write("				\"method\":\"POST\",\r\n");
      out.write("				\"enctype\":\"multipart/form-data\"\r\n");
      out.write("			}).submit();\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	}); // jQuery ready function\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>회원 가입 페이지 입니다.</h3>\r\n");
      out.write("<hr>\r\n");
      out.write("<form name=\"kosmoMemberInsert\" id=\"kosmoMemberInsert\">\r\n");
      out.write("<table border=\"1\" class=\"align\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\" class=\"align\">회원 가입</td>				\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td class=\"align\">회원아이디</td>\r\n");
      out.write("		<td>\r\n");
      out.write("				<input type=\"text\" name=\"kmid\" id=\"kmid\" size=\"25\">\r\n");
      out.write("				<input type=\"button\" id=\"kmidCheckBtn\" name=\"kmidCheckBtn\" value=\"아이디중복확인\" >\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"align\">회원비밀번호</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"password\" name=\"kmpw\" id=\"kmpw\" size=\"25\"><br>\r\n");
      out.write("			<input type=\"password\" name=\"kmpw_r\" id=\"kmpw_r\" size=\"25\" placeholder=\"비밀번호 확인\"><br>\r\n");
      out.write("			<input type=\"button\" name=\"kmpwCheck\" id=\"kmpwCheck\" value=\"비밀번호 확인\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>	\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"align\">회원이름</td>\r\n");
      out.write("		<td><input type=\"text\" name=\"kmname\" id=\"kmname\" size=\"25\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"align\">회원휴대폰번호</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<select name=\"kmhp\" id=\"kmhp\" style=\"width:50px;\">\r\n");
      out.write("			    <option value=\"010\">010</option>\r\n");
      out.write("			    <option value=\"011\">011</option>\r\n");
      out.write("			    <option value=\"016\">016</option>\r\n");
      out.write("			    <option value=\"017\">017</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			- <input type=\"text\" name=\"kmhp1\" id=\"kmhp1\" maxlength=\"4\" size=\"4\"/>\r\n");
      out.write("			- <input type=\"text\" name=\"kmhp2\" id=\"kmhp2\" maxlength=\"4\" size=\"4\"/>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"align\">회원이메일</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"kmemail\" id=\"kmemail\" size=\"7\">\r\n");
      out.write("			@ <input type=\"text\" name=\"kmemail1\" id=\"kmemail1\" size=\"7\">\r\n");
      out.write("			<select name=\"kmemail2\" id=\"kmemail2\">\r\n");
      out.write("				<option value=\"1\" selected>직접입력</option>\r\n");
      out.write("				<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("				<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("				<option value=\"daum.net\">daum.net</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"align\">회원우편번호</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"kmzone\" id=\"kmzone\" placeholder=\"우편번호\" size=\"25\"><br>\r\n");
      out.write("			<input type=\"button\" name=\"kmzone_btn\" id=\"kmzone_btn\" value=\"우편번호 찾기\"><br>\r\n");
      out.write("			<input type=\"text\" name=\"kmroad\" id=\"kmroad\" placeholder=\"회원도로명주소\" size=\"25\"><br>\r\n");
      out.write("			<input type=\"text\" name=\"kmroad2\" id=\"kmroad2\" placeholder=\"회원도로명상세주소\" size=\"25\"><br>\r\n");
      out.write("			<input type=\"text\" name=\"kmjibun\" id=\"kmjibun\" placeholder=\"지번주소\" size=\"25\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr> \r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"align\">회원사진</td>\r\n");
      out.write("		<td><input type=\"file\" name=\"kmimage\" id=\"kmimage\" size=\"25\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\" class=\"align\">				\r\n");
      out.write("		<input type=\"button\" value=\"회원가입\" id=\"insertBtn\">		\r\n");
      out.write("	</td>				\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
