/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.77
 * Generated at: 2022-05-20 09:25:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.kosmo.member.vo.KosmoMemberVO;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import java.util.List;

public final class kosmoMemberSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
    _jspx_imports_classes.add("a.b.c.com.kosmo.member.vo.KosmoMemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
 request.setCharacterEncoding("UTF-8");
      out.write(" \r\n");
      out.write(" ");

 	Logger logger=LogManager.getLogger(this.getClass());
 	logger.info("kosmoMemberSelect.jsp 페이지 입니다 >>>> : ");
 	
 	Object obj = request.getAttribute("searchList");
 	if(obj==null) return;
 	
 	List<KosmoMemberVO> list=(List<KosmoMemberVO>)obj;
 	int nCnt=list.size();
 	
 	String kmhp="";
 	String kmemail="";
 	
 	String kmhpList[]=null;
 	String kmhp0="";
 	String kmhp1="";
 	String kmhp2="";
 	
 	String kmemailList[]=null;
 	String kmemail1="";
 	String kmemail2="";
 	
 	KosmoMemberVO _kmvo=null;
 	
 	if(nCnt==1){
 		_kmvo=list.get(0);
 		kmhp=_kmvo.getKmhp();
 		logger.info("kmhp >>> : "+kmhp);
 		kmemail=_kmvo.getKmemail();
 		logger.info("kmemail >>> : "+kmemail);
 		
 		kmhpList=kmhp.split("-");
 		kmhp0=kmhpList[0];
 		kmhp1=kmhpList[1];
 		kmhp2=kmhpList[2];
 		
 		kmemailList=kmemail.split("@");
 		kmemail1=kmemailList[0];
 		kmemail2=kmemailList[1];
 			
 		logger.info("kmid >>> : "+_kmvo.getKmid());
 		logger.info("kmpw >>> : "+_kmvo.getKmpw());
 		logger.info("kmname >>> : "+_kmvo.getKmname());
 		logger.info("kmhp0 >>> : "+kmhp0);
 		logger.info("kmhp1 >>> : "+kmhp1);
 		logger.info("kmhp2 >>> : "+kmhp2);
 		logger.info("kmemail1 >>> : "+kmemail1);
 		logger.info("kmemail2 >>> : "+kmemail2);
 		
 		logger.info("kmzone >>> : "+_kmvo.getKmzone());
 		logger.info("kmroad >>> : "+_kmvo.getKmroad());
 		logger.info("kmroad2 >>> : "+_kmvo.getKmroad2());
 		logger.info("kmjibun >>> : "+_kmvo.getKmjibun());
 		logger.info("minsertdate >>> : "+_kmvo.getMinsertdate());
 		logger.info("mupdatedate >>> : "+_kmvo.getMupdatedate());
 	}
 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		alert(\"jQuery ready~\");\r\n");
      out.write("		\r\n");
      out.write("		// 아이디 중복체크\r\n");
      out.write("		$(\"#kmidCheckBtn\").click(function(){\r\n");
      out.write("			alert(\"midCheckBtn 함수 진입 >>> : \");\r\n");
      out.write("			\r\n");
      out.write("			let urlVal=\"/kosmoSpring_YYS/kosmoMemberIdcheck.yys\";\r\n");
      out.write("			let typeVal=\"POST\";\r\n");
      out.write("			let kmidVal=$(\"#kmid\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(kmidVal==''){\r\n");
      out.write("				alert(\"중복 체크할 아이디를 입력하세요 >>> : \");\r\n");
      out.write("				$(\"#kmid\").focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			console.log(\"urlVal >>> : \"+urlVal);\r\n");
      out.write("			console.log(\"typeVal >>> : \"+typeVal);\r\n");
      out.write("			console.log(\"kmidVal >>> : \"+kmidVal);\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:urlVal,\r\n");
      out.write("				type:typeVal,\r\n");
      out.write("				data:{\r\n");
      out.write("					\"kmid\":kmidVal\r\n");
      out.write("				},\r\n");
      out.write("				success:whenSuccess,\r\n");
      out.write("				error:whenError\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			function whenSuccess(resData){			\r\n");
      out.write("				if (resData == 'ID_YES'){\r\n");
      out.write("					alert(\"사용할 수 있는 아이디 입니다.\");\r\n");
      out.write("					$(\"#kmid\").focus();\r\n");
      out.write("				}else{\r\n");
      out.write("					alert(\"아이디가 이미 있습니다.\");\r\n");
      out.write("					$(\"#kmpw\").focus();\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			 \r\n");
      out.write("			function whenError(){\r\n");
      out.write("				alert(\"error\");\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#kmpwChange\").click(function(){\r\n");
      out.write("			alert(\"비밀번호 변경 버튼 >>> : \");\r\n");
      out.write("			$(\"#kmpw\").prop(\"readonly\", false);\r\n");
      out.write("			$(\"#kmpw_r\").prop(\"readonly\", false);\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// 비밀번호 체크\r\n");
      out.write("		$(\"#kmpwCheck\").click(function(){\r\n");
      out.write("			alert(\"비밀번호 체크 버튼 클릭 >>> : \");\r\n");
      out.write("			var pw=$(\"#kmpw\").val();\r\n");
      out.write("			var pw_r=$(\"#kmpw_r\").val();\r\n");
      out.write("			alert(pw+\" : \"+pw_r);\r\n");
      out.write("			if(pw==pw_r){\r\n");
      out.write("				alert(\"비밀번호가 변경되었습니다.  >>> : \");\r\n");
      out.write("				// $(\"#kmpw_r\").val(' ');\r\n");
      out.write("				$(\"#kmname\").focus();\r\n");
      out.write("				return true;\r\n");
      out.write("			}\r\n");
      out.write("			else{\r\n");
      out.write("				alert(\"비밀번호가 다릅니다 >>> : \");\r\n");
      out.write("				$(\"#kmpw\").val(' ');\r\n");
      out.write("				$(\"#kmpw_r\").val(' ');\r\n");
      out.write("				$(\"#kmpw\").focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// 이메일\r\n");
      out.write("		$(\"#kmemail2\").change(function(){\r\n");
      out.write("			$(\"#kmemail2 option:selected\").each(function(){\r\n");
      out.write("				// 직접입력일 경우\r\n");
      out.write("				if($(this).val()==1){\r\n");
      out.write("					var aa=$(\"#kmemail1\").val();\r\n");
      out.write("					$(\"#kmemail1\").val(' '); // 값 초기화\r\n");
      out.write("					$(\"#kmemail1\").attr(\"readonly\", false);\r\n");
      out.write("					}else{\r\n");
      out.write("						$(\"#kmemail1\").val($(this).text()); // 선택값 입력\r\n");
      out.write("						$(\"#kmemail1\").attr(\"readonly\", true); // 비활성화\r\n");
      out.write("					}\r\n");
      out.write("			});\r\n");
      out.write("		}); // change function\r\n");
      out.write("		\r\n");
      out.write("		// 우편번호\r\n");
      out.write("		$(\"#kmzone_btn\").click(function(){\r\n");
      out.write("			alert(\"우편번호 찾기 >>> : \");\r\n");
      out.write("			new daum.Postcode({\r\n");
      out.write("				oncomplete: function(data){\r\n");
      out.write("					$(\"#kmzone\").val(data.zonecode); // 5자리 새우편번호 사용\r\n");
      out.write("					$(\"#kmroad\").val(data.roadAddress); // 도로명 주소\r\n");
      out.write("					$(\"#kmjibun\").val(data.jibunAddress); // 지번주소\r\n");
      out.write("				}\r\n");
      out.write("			}).open();\r\n");
      out.write("		}); \r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$(\"#updatebtn\").click(function(){\r\n");
      out.write("			alert(\"update 버튼 클릭 >>> : \");\r\n");
      out.write("			$(\"#kosmoMemberSelect\").attr({\r\n");
      out.write("				\"action\":\"kosmoMemberUpdate.yys\",\r\n");
      out.write("				\"method\":\"POST\",\r\n");
      out.write("				\"enctype\":\"multipart/form-data\"\r\n");
      out.write("			}).submit();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#deletebtn\").click(function(){\r\n");
      out.write("			alert(\"delete 버튼 클릭 >>> : \");\r\n");
      out.write("			var vkmnum=$(\"#kmnum\").val();\r\n");
      out.write("			var vmdeleteyn=$(\"#mdeleteyn\").val();\r\n");
      out.write("			console.log(\"kmnum >>> : \"+kmnum);\r\n");
      out.write("			console.log(\"mdeleteyn >>> : \"+mdeleteyn);\r\n");
      out.write("			location.href=\"/kosmoSpring_YYS/kosmoMemberDelete.yys?kmnum=\"+vkmnum+\"&mdeleteyn=\"+vmdeleteyn;\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	body{\r\n");
      out.write("		text-align:center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	table, tr, td{\r\n");
      out.write("		border:1px solid black;\r\n");
      out.write("		text-align:center;\r\n");
      out.write("	}\r\n");
      out.write("	tt{\r\n");
      out.write("		border:1px solid black;\r\n");
      out.write("		text-align:center;\r\n");
      out.write("	}\r\n");
      out.write("		\r\n");
      out.write("	img{\r\n");
      out.write("		height:150px;\r\n");
      out.write("		width:150px;\r\n");
      out.write("		border-radius:60%;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>회원정보</h3>\r\n");
      out.write("<hr>\r\n");
      out.write("<form name=\"kosmoMemberSelect\" id=\"kosmoMemberSelect\">\r\n");
      out.write("<table class=\"align\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\" class=\"align\">회원 정보</td>	\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"tt\">회원사진</td>\r\n");
      out.write("		<td><img src=\"/kosmoSpring_YYS/fileupload/member/");
      out.print( _kmvo.getKmimage() );
      out.write("\" width=\"50\" height=\"50\" alt=\"이미지가 안 나와요\"><br>\r\n");
      out.write("			이미지 변경하기 : <input type=\"file\" name=\"kmimage\" id=\"kmimage\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>	\r\n");
      out.write("	<tr>	\r\n");
      out.write("		<td  class=\"tt\">회원아이디</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"kmid\" id=\"kmid\"  value=");
      out.print( _kmvo.getKmid()  );
      out.write(" size=\"25\">\r\n");
      out.write("			<input type=\"button\" id=\"kmidCheckBtn\" name=\"kmidCheckBtn\" value=\"아이디중복확인\" >	\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>	\r\n");
      out.write("		<td  class=\"tt\">회원비밀번호</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"password\" name=\"kmpw\" id=\"kmpw\" placeholder=\"아래에서 비밀번호 확인 후 변경\" value=");
      out.print( _kmvo.getKmpw()  );
      out.write(" readonly size=\"25\"><br>\r\n");
      out.write("			<input type=\"password\" name=\"kmpw_r\" id=\"kmpw_r\" placeholder=\"비밀번호 변경 버튼 클릭 후 입력\"  readonly size=\"25\"><br>\r\n");
      out.write("			<input type=\"button\" name=\"kmpwChange\" id=\"kmpwChange\" value=\"비밀번호 변경  버튼\">\r\n");
      out.write("			<input type=\"button\" name=\"kmpwCheck\" id=\"kmpwCheck\" value=\"비밀번호 변경하기\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>	\r\n");
      out.write("	<tr>	\r\n");
      out.write("		<td  class=\"tt\">회원이름</td>\r\n");
      out.write("		<td><input type=\"text\" name=\"kmname\" id=\"kmname\" value=");
      out.print( _kmvo.getKmname() );
      out.write(" size=\"25\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>	\r\n");
      out.write("		<td  class=\"tt\">회원휴대폰번호</td>\r\n");
      out.write("		<td>\r\n");
      out.write("		<input type=\"text\" name=\"kmhp\" id=\"kmhp\" value=");
      out.print( kmhp0  );
      out.write(" size=\"8\">\r\n");
      out.write("		- <input type=\"text\" name=\"kmhp1\" id=\"kmhp1\" value=");
      out.print( kmhp1  );
      out.write(" size=\"8\">\r\n");
      out.write("		- <input type=\"text\" name=\"kmhp2\" id=\"kmhp2\" value=");
      out.print( kmhp2  );
      out.write(" size=\"8\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>	\r\n");
      out.write("		<td  class=\"tt\">회원이메일</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"kmemail\" id=\"kmemail\" value=");
      out.print( kmemail1 );
      out.write(" size=\"14\">\r\n");
      out.write("			@ <input type=\"text\" name=\"kmemail1\" id=\"kmemail1\" value=");
      out.print( kmemail2 );
      out.write(" size=\"14\">\r\n");
      out.write("			<select name=\"kmemail2\" id=\"kmemail2\">\r\n");
      out.write("				<option value=\"1\" selected>직접입력</option>\r\n");
      out.write("				<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("				<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("				<option value=\"daum.net\">daum.net</option>\r\n");
      out.write("			</select>\r\n");
      out.write("		</td>		\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"tt\">회원우편번호</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"kmzone\" id=\"kmzone\" value=");
      out.print( _kmvo.getKmzone()  );
      out.write(" size=\"20\">\r\n");
      out.write("			<input type=\"button\" name=\"kmzone_btn\" id=\"kmzone_btn\" value=\"우편번호 찾기\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>		\r\n");
      out.write("		<td  class=\"tt\">회원도로명주소</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"kmroad\" id=\"kmroad\" value=");
      out.print( _kmvo.getKmroad() );
      out.write(" size=\"25\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td  class=\"tt\">회원도로명상세주소</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"kmroad2\" id=\"kmroad2\" value=");
      out.print( _kmvo.getKmroad2() );
      out.write(" size=\"25\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td class=\"tt\">지번주소</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"kmjibun\" id=\"kmjibun\" value=");
      out.print( _kmvo.getKmjibun() );
      out.write(" size=\"25\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td class=\"tt\">회원유무</td>	\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"mdeleteyn\" id=\"mdeleteyn\" value=");
      out.print( _kmvo.getMdeleteyn() );
      out.write(" readonly size=\"25\"> \r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td class=\"tt\">등록일</td>\r\n");
      out.write("		<td><input type=\"text\" name=\"minsertdate\" id=\"minsertdate\" value=");
      out.print( _kmvo.getMinsertdate() );
      out.write(" readonly size=\"25\"></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>	\r\n");
      out.write("		<td class=\"tt\">수정일</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type=\"text\" name=\"mupdatedate\" id=\"mupdatedate\" value=");
      out.print( _kmvo.getMupdatedate() );
      out.write(" readonly size=\"25\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>		\r\n");
      out.write("		<td colspan=\"12\"><input type=\"button\" id=\"updatebtn\" name=\"updatebtn\" value=\"회원수정\" id=\"updateBtn\"><input type=\"button\" id=\"deletebtn\" name=\"deletebtn\" value=\"회원삭제\" id=\"insertBtn\"></td>		\r\n");
      out.write("	<tr>\r\n");
      out.write("</table>\r\n");
      out.write("<input type=\"hidden\" id=\"kmnum\" name=\"kmnum\" value=");
      out.print( _kmvo.getKmnum() );
      out.write(">\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
