/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.77
 * Generated at: 2022-05-19 07:17:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.cart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import a.b.c.com.kosmo.cart.vo.KosmoCartVO;
import java.util.List;
import a.b.c.com.kosmo.common.NumUtil;

public final class kosmoCartSelectAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("a.b.c.com.kosmo.common.NumUtil");
    _jspx_imports_classes.add("a.b.c.com.kosmo.cart.vo.KosmoCartVO");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!-- log 4j -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8");
      out.write(' ');
      out.write('\r');
      out.write('\n');

	Logger logger=LogManager.getLogger(this.getClass()); 
	logger.info("kosmoCartSelectAll.jsp 페이지 입니다 >>> : ");
	
	String strPage="";
	strPage=request.getParameter("page");
	logger.info("page >>> : "+strPage);
	
if(strPage.equals("insert")){
	Object obj = request.getAttribute("listAll");
	List<KosmoCartVO> list = (List<KosmoCartVO>)obj;
	
	int nCnt = list.size();
	logger.info("nCnt >>> : " + nCnt);	

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/kosmoSpring_YYS/js/common.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		alert(\"jQuery ready~~\");		\r\n");
      out.write("		\r\n");
      out.write("		$(document).on(\"click\", \"#chek\", function(){\r\n");
      out.write("			if($(this).prop('checked')){\r\n");
      out.write("				$(\".mcnum\").prop('checked', true);\r\n");
      out.write("			}else{\r\n");
      out.write("				$(\".mcnum\").prop('checked', false);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 주문하기 버튼\r\n");
      out.write("		$(document).on(\"click\", \"#buyBtn\", function(){\r\n");
      out.write("			alert(\"주문하기 버튼을 클릭하셨습니다 >>> : \");\r\n");
      out.write("			location.href=\"/kosmoSpring_YYS/kosmoLoginForm.yys\"\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 쇼핑하기 버튼\r\n");
      out.write("		$(document).on(\"click\", \"#shopingBtn\", function(){\r\n");
      out.write("			alert(\"쇼핑하기 버튼을 클릭하셨습니다 >>> : \");\r\n");
      out.write("			location.href=\"/kosmoSpring_YYS/kosmoProductSelectAll.yys\"\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 선택삭제 버튼\r\n");
      out.write("		$(document).on(\"click\", \"#delBtn\", function(){\r\n");
      out.write("			alert(\"선택삭제 버튼을 클릭하셨습니다 >>> : \");\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 장바구니 비우기\r\n");
      out.write("		$(document).on(\"click\", \"#delAllBtn\", function(){\r\n");
      out.write("			alert(\"장바구니 버튼을 클릭하셨습니다 >>> : \");\r\n");
      out.write("			$(\"#productList\").attr({\r\n");
      out.write("				\"action\":\"/kosmoSpring_YYS/kosmoCartDeleteAll.yys\",\r\n");
      out.write("				\"method\":\"GET\",\r\n");
      out.write("				\"enctype\":\"application/x-www-form-urlencoded\"\r\n");
      out.write("			}).submit();\r\n");
      out.write("		});		\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3 align=\"center\">장바구니</h3>\r\n");
      out.write("<hr>\r\n");
      out.write("<form name=\"productList\" id=\"productList\">\r\n");
      out.write("<table border=\"1\" align=\"center\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td align=\"center\">\r\n");
      out.write("		<input type=\"checkbox\" name=\"chek\" id=\"chek\" class=\"chek\">\r\n");
      out.write("	</td>\r\n");
      out.write("	<td align=\"center\">상품명</td>\r\n");
      out.write("	<td align=\"center\">가격</td>\r\n");
      out.write("	<td align=\"center\">수량</td>\r\n");
      out.write("	<td align=\"center\">합계</td>	\r\n");
      out.write("	<td align=\"center\">적립금</td>	\r\n");
      out.write("	<td align=\"center\">배송비</td>\r\n");
      out.write("	<td align=\"center\">관심상품/삭제</td>		\r\n");
      out.write("</tr>\r\n");
      out.write("</thead>\r\n");

String mnum = "";
String mprice = "";
String mpricesum = "";
String kmnum="";
int payment=0;
String totalpayment="";

for(int i=0; i<nCnt; i++){		
	KosmoCartVO _cvo = list.get(i);
	mprice = NumUtil.comma(_cvo.getMprice());
	mpricesum = NumUtil.comma(_cvo.getMpricesum());
	kmnum=_cvo.getKmnum();

      out.write("\r\n");
      out.write("<tbody>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td align=\"center\">\r\n");
      out.write("		<input type=\"checkbox\" name=\"mcnum\" id=\"mcnum\" class=\"mcnum\" value=");
      out.print( _cvo.getMcnum() );
      out.write(" >\r\n");
      out.write("	</td>		\r\n");
      out.write("	<td class=\"tt\">\r\n");
      out.write("		<img src=\"/kosmoSpring_YYS/fileupload/board/");
      out.print( _cvo.getMimg() );
      out.write("\" width=\"50\" height=\"50\" alt=\"이미지가 안 나와요\"><br>\r\n");
      out.write("		");
      out.print( _cvo.getMid() );
      out.write(" \r\n");
      out.write("	</td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( mprice );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( _cvo.getMcnt() );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( mpricesum );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">적립금</td>\r\n");
      out.write("	<td class=\"tt\">배송비</td>\r\n");
      out.write("	<td class=\"tt\" align=\"center\">		\r\n");
      out.write("		<input type=\"button\" value=\"관심상품\" /><br>\r\n");
      out.write("		<input type=\"button\" value=\"삭제\" id=\"dbtn\"/><br>\r\n");
      out.write("	</td>	\r\n");
      out.write("</tr>\r\n");

	payment=payment+Integer.parseInt(NumUtil.comma_replace(mpricesum));
	logger.info("payment >>> : "+payment);
	}
	totalpayment=NumUtil.comma(String.valueOf(payment));

      out.write("	\r\n");
      out.write("<input type=\"hidden\" id=\"kmnum\" name=\"kmnum\" value=");
      out.print( kmnum  );
      out.write(">\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"8\" align=\"right\">장바구니 총합 금액 <input type=\"text\" id=\"totalpayment\" value=");
      out.print( totalpayment );
      out.write("  disabled> 원</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"8\" align=\"right\">\r\n");
      out.write("	결제 예정금액 <font size=\"5\" style=\"color:red;\"><input type=\"text\" id=\"totalpayment\" value=");
      out.print( totalpayment );
      out.write("  disabled></font>원\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td colspan=\"8\" align=\"left\">		\r\n");
      out.write("		<input type=\"button\" value=\"선택삭제\" id='delBtn'>	\r\n");
      out.write("		<input type=\"button\" value=\"장바구니 비우기\" id='delAllBtn'>\r\n");
      out.write("		 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n");
      out.write("		<input type=\"button\" value=\"쇼핑하기\" id='shopingBtn'>							\r\n");
      out.write("		<input type=\"button\" value=\"주문하기\" id='buyBtn'>							\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>					\r\n");
      out.write("</tbody>			\r\n");
      out.write("</table>\r\n");
      out.write("</form>	\r\n");

}else{

      out.write("\r\n");
      out.write("	<h3>장바구니가 담은 상품이 없습니다.</h3>\r\n");

}	

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
