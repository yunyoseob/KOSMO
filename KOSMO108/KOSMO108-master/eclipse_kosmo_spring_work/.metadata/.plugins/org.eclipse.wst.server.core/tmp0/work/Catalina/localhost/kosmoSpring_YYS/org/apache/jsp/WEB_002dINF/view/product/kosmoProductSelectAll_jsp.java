/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.77
 * Generated at: 2022-05-19 05:40:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.kosmo.product.vo.KosmoProductVO;
import java.util.List;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import a.b.c.com.kosmo.common.NumUtil;

public final class kosmoProductSelectAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1652351101717L));
    _jspx_dependants.put("jar:file:/C:/00.KOSMO108/30.Web/eclipse_kosmo_spring_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/kosmoSpring_YYS/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("a.b.c.com.kosmo.product.vo.KosmoProductVO");
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("a.b.c.com.kosmo.common.NumUtil");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 5000 을 5,000으로 만들어주는 클래스 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 한글 깨짐 방지 -->\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');

	Logger logger=LogManager.getLogger(this.getClass()); 
	logger.info("kosmoProductSelectAll.jsp 페이지 입니당 >>> : ");
	
	// 페이징 변수 세팅
	int pageSize=0;
	int groupSize=0;
	int curPage=0;
	int totalCount=0;
	
	Object objPaging=request.getAttribute("pagingKVO");
	KosmoProductVO pagingKVO=(KosmoProductVO)objPaging;
	
	Object obj=request.getAttribute("listAll");
	List<KosmoProductVO> list=(List<KosmoProductVO>)obj;
	
	int nCnt=list.size();
	logger.info("nCnt >>> : "+nCnt);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/kosmoSpring_YYS/js/common.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		alert(\"jQuery ready~~~\");\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	th {\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>kosmoProductSelectAll.jsp</h3>\r\n");
      out.write("<h3>상품목록</h3>\r\n");
      out.write("<hr>\r\n");
      out.write("<form name=\"productList\" id=\"productList\">\r\n");
      out.write("<table border=\"1\" align=\"center\">\r\n");
      out.write("<thead>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>사진</th>\r\n");
      out.write("		<th>내용</th>\r\n");
      out.write("		<th>가격</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("</thead>	\r\n");

String mnum="";
String mprice="";

for(int i=0; i<nCnt; i++){
	KosmoProductVO kvo=list.get(i);
	mnum=kvo.getMnum();
	mprice=kvo.getMprice();
	mprice=NumUtil.comma(mprice);
	
	// 페이징 세팅
	pageSize=Integer.parseInt(pagingKVO.getPageSize());
	groupSize=Integer.parseInt(pagingKVO.getGroupSize());
	curPage=Integer.parseInt(pagingKVO.getCurPage());
	totalCount=Integer.parseInt(kvo.getTotalCount());

      out.write("	\r\n");
      out.write("<tbody>	\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td rowspan=\"4\" align=\"center\" style=\"width:100px;\">\r\n");
      out.write("			<img src=\"/kosmoSpring_YYS/fileupload/board/");
      out.print( kvo.getMimg() );
      out.write("\" width=\"50\" height=\"50\" alt=\"이미지가 안 나와요\"><br>\r\n");
      out.write("			");
      out.print( kvo.getMid() );
      out.write("\r\n");
      out.write("		</td>	\r\n");
      out.write("		<td align=\"left\" style=\"width:300px;\">상품번호 : ");
      out.print( mnum );
      out.write("</td>\r\n");
      out.write("		<td rowspan=\"4\" align=\"center\" vertical-align:\"middle\" style=\"width:150px;\">\r\n");
      out.write("		");
      out.print( mprice );
      out.write("&nbsp;&nbsp;\r\n");
      out.write("		<!-- GET방식으로 보낸다. -->\r\n");
      out.write("		<a href=\"kosmoProductMSelect.yys?mnum=");
      out.print( mnum );
      out.write("\">\r\n");
      out.write("			<img src=\"/kosmoSpring_YYS/image/img_mando/ase.gif\" width=\"25\" height=\"25\" alt=\"image\"> \r\n");
      out.write("		</a>\r\n");
      out.write("		</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr><td>상품설명 : ");
      out.print( kvo.getMdes() );
      out.write("</td></tr>\r\n");
      out.write("<tr><td>제조사 : ");
      out.print( kvo.getMcom() );
      out.write("</td></tr>\r\n");
      out.write("<tr><td>등록일 : ");
      out.print( kvo.getMinsertdate() );
      out.write("</td></tr>\r\n");
	
		}

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("<tfoot>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"3\">\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "productPaging.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("url", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("kosmoProductSelectAll.yys", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("str", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("pageSize", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( pageSize ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("groupSize", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( groupSize ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("curPage", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( curPage ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("totalCount", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( totalCount ), request.getCharacterEncoding()), out, true);
      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</tfoot>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
