/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.77
 * Generated at: 2022-05-02 03:06:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.kosmo.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import a.b.c.com.kosmo.board.vo.BoardVO;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

public final class boardSelectAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("a.b.c.com.kosmo.board.vo.BoardVO");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- 디바이스에 최적화된 크기로 출력됨 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width-device-width, initial-scale=1\" >\r\n");
      out.write("<!--  jQuery CDN 불러오기 -->\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("/*\r\n");
      out.write("  // 체크박스 체크 확인하기\r\n");
      out.write("  function checkOnly(chk){\r\n");
      out.write("	// alert(\" >>>> : \"+chk);\r\n");
      out.write("	console.log(\"chk >>> : \"+chk);\r\n");
      out.write("	var chkObj=document.getElementByName(\"bnumCheck\");\r\n");
      out.write("	console.log(\"chkObj >>> : \"+chkObj);\r\n");
      out.write("	for (var i=0; i<chkObj.length; i++){\r\n");
      out.write("		if(chkObj[i]!=chk){\r\n");
      out.write("			chkObj[i].checked=false;\r\n");
      out.write("		}	\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write(" */\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		// 등록하기\r\n");
      out.write("		$(\"#I\").on(\"click\", function(){\r\n");
      out.write("			alert(\"등록 버튼을 클릭하셨습니다. \");\r\n");
      out.write("			alert(\"board.html으로 이동 >>>> : \");\r\n");
      out.write("			location.href=\"/kosServlet_YYS/kosmo/board/board.html\";\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 조회하기\r\n");
      out.write("		$(\"#SALL\").on(\"click\", function(){\r\n");
      out.write("			alert(\"조회 버튼을 클릭하셨습니다.\");\r\n");
      out.write("			alert(\"콘트롤러로 이동 >>> : \");\r\n");
      out.write("			location.href=\"/kosServlet_YYS/board?isudType=SALL\";\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 체크박스 하나만 체크 되게 하기 bnumChk\r\n");
      out.write("		/* <input type=\"checkBox\" class=\"bnumChk\" id=\"bnumChk\" name=\"bnumChk\" value=\"< _bvo.getBnum() %>\" /> */\r\n");
      out.write("		$(document).on(\"click\", \"#bnumChk\", function(){\r\n");
      out.write("			if($(this).prop(\"checked\")){\r\n");
      out.write("				const c=$(this).prop(\"checked\");\r\n");
      out.write("				console.log(\"checked 된 this >>> : \"+this);\r\n");
      out.write("				console.log(\"checked 된 this.val >>> : \"+$(this).val());\r\n");
      out.write("				console.log(\"checked 된 this.prop >>> : \"+c);\r\n");
      out.write("				console.log(\"checked 된 this >>> : \"+JSON.stringify(c));\r\n");
      out.write("				$(\".bnumChk\").prop('checked', false);\r\n");
      out.write("				$(this).prop('checked', true);\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 수정하기\r\n");
      out.write("		$(\"#U\").on(\"click\", function(){\r\n");
      out.write("			alert(\"수정 버튼을 클릭하셨습니다.\");\r\n");
      out.write("			if($('.bnumChk:checked').length==0){\r\n");
      out.write("				alert(\"하나도 체크가 되지 않았습니다. 한 개 이상 체크하세요.\");\r\n");
      out.write("				\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			$(\"#boardSelectAll\").attr({\r\n");
      out.write("				\"action\":\"/kosServlet_YYS/board\",\r\n");
      out.write("				\"method\":\"GET\",\r\n");
      out.write("				\"enctype\":\"application/x-www-form-urlencoded\"\r\n");
      out.write("			}).submit();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 삭제하기\r\n");
      out.write("		// <input type=\"button\" value=\"삭제\" id=\"D\">\r\n");
      out.write("		$(document).on(\"click\", '#D', function(){\r\n");
      out.write("			// <input type=\"checkBox\" class=\"bnumChk\" id=\"bnumChk\" name=\"bnumChk\" value=\"< _bvo.getBnum() %>\" />\r\n");
      out.write("			if($('.bnumChk:checked').length==0){\r\n");
      out.write("				alert(\"수정할 글 번호 하나를 선택하시오!!!\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			alert(\"콘트롤러로 이동합니다.\");\r\n");
      out.write("			$(\"#isudType\").val('D');\r\n");
      out.write("			$(\"#boardSelectAll\").attr({\r\n");
      out.write("				\"action\":\"/kosServlet_YYS/board\",\r\n");
      out.write("				\"method\":\"GET\",\r\n");
      out.write("				\"enctype\":\"application/x-www-form-urlencoded\"\r\n");
      out.write("			}).submit();\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	}); // end of $(document).ready(function()\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>boardSelectAll.jsp 페이지입니다.</h1>\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');
 response.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("// String bsubject=request.getParameter(\"bsubject\");\r\n");
      out.write("//String bwriter=request.getParameter(\"bwriter\");\r\n");
      out.write("// String bpw=request.getParameter(\"bpw\");\r\n");
      out.write("//String bmemo=request.getParameter(\"bmemo\");\r\n");
      out.write("---------------------------------------------------\r\n");
      out.write("글 제목			길이 100\r\n");
      out.write("BSUBJECT		VARCHAR2(100)\r\n");
      out.write("글쓴이			길이 50\r\n");
      out.write("BWRITER		VARCHAR2(30)\r\n");
      out.write("글 쓸때 사용한 패스워드	길이 300 8자리 이상 : 단방향 암호화\r\n");
      out.write("BPW			VARCHAR2(300)\r\n");
      out.write("글 내용			길이 2000자\r\n");
      out.write("BMEMO			VARCHAR2(2000)\r\n");
      out.write(" -->\r\n");
      out.write("<form id=\"boardSelectAll\" name=\"boardSelectAll\">\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("	<input type=\"hidden\" id=\"isudType\" name=\"isudType\" value=\"U\" >\r\n");
      out.write("	<tr>\r\n");
      out.write("	<td class=\"tt\" style=\"background-color:#e6ffe6\">\r\n");
      out.write("		<!-- <input type=\"checkbox\" class=\"chkAll\" name=\"chkAll\" id=\"chkAll\"/> -->\r\n");
      out.write("	</td>\r\n");
      out.write("	<td class=\"tt\" style=\"background-color:#e6ffe6\">순번</td>\r\n");
      out.write("	<td class=\"tt\" style=\"background-color:#e6ffe6\">글번호</td>\r\n");
      out.write("	<td class=\"tt\" style=\"background-color:#e6ffe6\">글제목</td>\r\n");
      out.write("	<td class=\"tt\" style=\"background-color:#e6ffe6\">글쓴이</td>\r\n");
      out.write("	<td class=\"tt\" style=\"background-color:#e6ffe6\">글내용</td>\r\n");
      out.write("	<td class=\"tt\" style=\"background-color:#e6ffe6\">등록일</td>\r\n");
      out.write("	</tr>\r\n");

	Logger logger=LogManager.getLogger(this.getClass());
	Object obj=request.getAttribute("aList");
	if(obj==null) return;
	
	ArrayList<BoardVO> aList= (ArrayList<BoardVO>) obj;
	int nCnt=aList.size();
	logger.info("nCnt :: aList.size() >>> : "+nCnt);
	
	if (aList!=null && nCnt>0){
		logger.info("aList 출력 로직 >>> : ");
		for(int i=0; i<nCnt; i++){
			BoardVO _bvo=aList.get(i);

      out.write("			\r\n");
      out.write("<!-- \r\n");
      out.write("		         BNUM		    \r\n");
      out.write("		         BSUBJECT	        \r\n");
      out.write("		         BWRITER		        \r\n");
      out.write("		         // BPW 보여주면 안 됨 			        \r\n");
      out.write("		         BMEMO		        \r\n");
      out.write("		         // DELETEYN  보여주면 안 됨       \r\n");
      out.write("		         INSERTDATE          \r\n");
      out.write("		         // UPDATEDATE   보여줄 필요 X       \r\n");
      out.write(" -->\r\n");
      out.write(" 		<tr>\r\n");
      out.write(" 		<td class=\"tt\">\r\n");
      out.write(" 			<input type=\"checkBox\" class=\"bnumChk\" id=\"bnumChk\" name=\"bnumChk\" value=\"");
      out.print( _bvo.getBnum() );
      out.write("\" />\r\n");
      out.write(" 			<!--  _bvo.getBnum() -->\r\n");
      out.write(" 		</td>\r\n");
      out.write(" 		<td class=\"tt\" id=\"num\">");
      out.print( i+1 );
      out.write("</td>\r\n");
      out.write("		<td class=\"tt\">");
      out.print( _bvo.getBnum() );
      out.write("</td>\r\n");
      out.write("		<td class=\"tt\">");
      out.print( _bvo.getBsubject() );
      out.write("</td>\r\n");
      out.write("		<td class=\"tt\">");
      out.print( _bvo.getBwriter() );
      out.write("</td>\r\n");
      out.write("		<td class=\"tt\">");
      out.print( _bvo.getBmemo() );
      out.write("</td>\r\n");
      out.write("		<td class=\"tt\">");
      out.print( _bvo.getInsertdate() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");

		}	

      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"7\" align=\"right\">\r\n");
      out.write("			<input type=\"button\" value=\"등록\" id=\"I\">\r\n");
      out.write("			<input type=\"button\" value=\"조회\" id=\"SALL\">\r\n");
      out.write("			<input type=\"button\" value=\"수정\" id=\"U\">\r\n");
      out.write("			<input type=\"button\" value=\"삭제\" id=\"D\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");

	}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
