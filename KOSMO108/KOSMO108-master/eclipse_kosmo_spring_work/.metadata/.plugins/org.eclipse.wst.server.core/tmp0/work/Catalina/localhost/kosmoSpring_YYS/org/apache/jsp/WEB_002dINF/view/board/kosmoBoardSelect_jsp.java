/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.77
 * Generated at: 2022-05-27 02:06:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.kosmo.board.vo.KosmoBoardVO;
import a.b.c.com.kosmo.common.CodeUtil;
import java.util.List;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

public final class kosmoBoardSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1652351101717L));
    _jspx_dependants.put("jar:file:/C:/00.KOSMO108/30.Web/eclipse_kosmo_spring_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/kosmoSpring_YYS/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("a.b.c.com.kosmo.board.vo.KosmoBoardVO");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
    _jspx_imports_classes.add("a.b.c.com.kosmo.common.CodeUtil");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8");
      out.write(' ');
      out.write('\r');
      out.write('\n');

	Logger logger=LogManager.getLogger(this.getClass());
	logger.info("kosmoBoardSelect 페이지 입니다 >>> : ");
	
	Object obj=request.getAttribute("listS");
	if(obj==null) return;
	
	List<KosmoBoardVO> list=(List<KosmoBoardVO>)obj;
	int nCnt=list.size();
	
	KosmoBoardVO _bvo=null;
	if(nCnt==1){
		_bvo=list.get(0);
	}

      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		// alert(\"jQuery ready~~~\");\r\n");
      out.write("		// pwBtn : 비밀번호\r\n");
      out.write("		$(document).on(\"click\", \"#pwBtn\", function(){\r\n");
      out.write("			alert(\"비밀번호 버튼을 클릭하셧습니다 >>> : \");\r\n");
      out.write("			let input_kbpw = prompt('비밀번호를 입력하세요', 'enter password');\r\n");
      out.write("			// alert(\"input_kbpw >>> : \"+input_kbpw);\r\n");
      out.write("			let pwcheckURL=\"/kosmoSpring_YYS/kosmoBoardPwCheck.yys\";\r\n");
      out.write("			let reqType=\"POST\";\r\n");
      out.write("			let input_kbnum=$(\"#kbnum\").val();\r\n");
      out.write("			console.log(\"input_kbnum >>> : \"+input_kbnum);\r\n");
      out.write("			let dataParam={\r\n");
      out.write("					kbnum:input_kbnum,\r\n");
      out.write("					kbpw:input_kbpw\r\n");
      out.write("			};\r\n");
      out.write("			console.log(\"input_kbpw >>> : \"+input_kbpw);\r\n");
      out.write("			console.log(\"pwcheckURL >>> : \"+pwcheckURL);\r\n");
      out.write("			console.log(\"reqType >>> : \"+reqType);\r\n");
      out.write("			console.log(\"dataParam >>> : \"+dataParam);\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:pwcheckURL,\r\n");
      out.write("				type:reqType,\r\n");
      out.write("				data:dataParam,\r\n");
      out.write("				success:whenSuccess,\r\n");
      out.write("				error:whenError\r\n");
      out.write("			});\r\n");
      out.write("			function whenSuccess(resData){\r\n");
      out.write("				console.log(\"resData >>> : \"+resData);\r\n");
      out.write("				if(\"ID_YES\"==resData){\r\n");
      out.write("					alert(\"비밀번호 GOOD.\");\r\n");
      out.write("					$(\"#updateBtn\").css('background-color','yellow');	\r\n");
      out.write("					if ($(\"#updateBtn\").prop(\"disabled\")==true){\r\n");
      out.write("						$(\"#updateBtn\").attr(\"disabled\", false);\r\n");
      out.write("					}\r\n");
      out.write("				}else if(\"ID_NO\"==resData){\r\n");
      out.write("					alert(\"비밀번호 BAD.\");\r\n");
      out.write("					return;\r\n");
      out.write("				};\r\n");
      out.write("			}\r\n");
      out.write("			function whenError(e){\r\n");
      out.write("				alert(\"비밀번호 확인 실패 >>> : \"+e.responseText);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("		// insertBtn\r\n");
      out.write("		$(document).on(\"click\", \"#insertBtn\", function(){\r\n");
      out.write("			location.href=\"kosmoBoardInsertForm.yys\";\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// selectAllBtn\r\n");
      out.write("		$(document).on(\"click\", \"#selectAllBtn\", function(){\r\n");
      out.write("			$(\"#boardUpdateForm\").attr({\"method\":\"GET\",\"action\":\"kosmoBoardSelectAll.yys\"}).submit();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// updateBtn\r\n");
      out.write("		$(document).on(\"click\", \"#updateBtn\", function(){\r\n");
      out.write("			alert(\"updateBtn\");\r\n");
      out.write("			$(\"#boardUpdateForm\").attr({\"method\":\"GET\", \"action\":\"kosmoBoardUpdate.yys\"}).submit();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>게시글 내용</h3>\r\n");
      out.write("<hr>\r\n");
      out.write("<div>\r\n");
      out.write("<form name=\"boardUpdateForm\" id=\"boardUpdateForm\">\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=\"center\">\r\n");
      out.write("<font size=\"4\" style=\"color:black;\">");
      out.print( _bvo.getKbsubject() );
      out.write("</font>\r\n");
      out.write("<input type=\"hidden\" name=\"kmnum\" id=\"kmnum\" value=\"");
      out.print( "KM202205170001"  );
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" id=\"kbnum\" name=\"kbnum\" value=\"");
      out.print( _bvo.getKbnum() );
      out.write("\" />\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=\"left\">\r\n");
      out.write("<font size=\"1\" style=\"color:gray;\">\r\n");
      out.write("최초작성일 : ");
      out.print( _bvo.getMinsertdate() );
      out.write(" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("최종수정일 : ");
      out.print( _bvo.getMupdatedate() );
      out.write("\r\n");
      out.write("</font>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=\"center\"> \r\n");
      out.write("<img src=\"/kosmoSpring_YYS/fileupload/board2/");
      out.print( _bvo.getKbfile() );
      out.write("\" border=\"1\" width=\"380\" height=\"300\" alt=\"image\">\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=\"center\">\r\n");
      out.write("<textarea name=\"kbcontent\" id=\"kbcontent\" rows=\"5\" cols=\"50\">");
      out.print( _bvo.getKbcontent() );
      out.write("\r\n");
      out.write("</textarea>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=\"left\">\r\n");
      out.write("<font size=\"1\" style=\"color:gray;\">\r\n");
      out.write("작성자 : ");
      out.print(  _bvo.getKbname() );
      out.write("\r\n");
      out.write("</font>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<!--  패스워드 -->\r\n");
      out.write("<tr>\r\n");
      out.write("<td>패스워드\r\n");
      out.write("<input type=\"password\" name=\"kbpw\" id=\"kbpw\" />\r\n");
      out.write("<button type=\"button\" id=\"pwBtn\">비밀번호</button>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\" align=\"left\">\r\n");
      out.write("<button type=\"button\" id=\"insertBtn\">글쓰기</button>\r\n");
      out.write("<button type=\"button\" id=\"selectAllBtn\">글목록</button>\r\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	\r\n");
      out.write("<button type=\"button\" id=\"updateBtn\" disabled>수정</button>\r\n");
      out.write("<button type=\"button\" id=\"pwBtnChk\">비밀번호확인</button>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("<!--  댓글 처리하는 루틴 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/kosmoRboardForm.yys" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("kbnum", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( _bvo.getKbnum() ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
